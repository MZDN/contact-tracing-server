// Code generated by protoc-gen-go. DO NOT EDIT.
// source: memo.proto

package backend

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Memo_ReportType int32

const (
	Memo_SELF_REPORTED       Memo_ReportType = 0
	Memo_CERTIFIED_INFECTION Memo_ReportType = 1
)

var Memo_ReportType_name = map[int32]string{
	0: "SELF_REPORTED",
	1: "CERTIFIED_INFECTION",
}

var Memo_ReportType_value = map[string]int32{
	"SELF_REPORTED":       0,
	"CERTIFIED_INFECTION": 1,
}

func (x Memo_ReportType) String() string {
	return proto.EnumName(Memo_ReportType_name, int32(x))
}

func (Memo_ReportType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2e9a3479e3e5dd48, []int{0, 0}
}

type Memo struct {
	ReportType           Memo_ReportType `protobuf:"varint,1,opt,name=reportType,proto3,enum=backend.Memo_ReportType" json:"reportType,omitempty"`
	DiseaseID            int32           `protobuf:"varint,2,opt,name=diseaseID,proto3" json:"diseaseID,omitempty"`
	SymptomID            []int32         `protobuf:"varint,3,rep,packed,name=symptomID,proto3" json:"symptomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Memo) Reset()         { *m = Memo{} }
func (m *Memo) String() string { return proto.CompactTextString(m) }
func (*Memo) ProtoMessage()    {}
func (*Memo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9a3479e3e5dd48, []int{0}
}

func (m *Memo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Memo.Unmarshal(m, b)
}
func (m *Memo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Memo.Marshal(b, m, deterministic)
}
func (m *Memo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Memo.Merge(m, src)
}
func (m *Memo) XXX_Size() int {
	return xxx_messageInfo_Memo.Size(m)
}
func (m *Memo) XXX_DiscardUnknown() {
	xxx_messageInfo_Memo.DiscardUnknown(m)
}

var xxx_messageInfo_Memo proto.InternalMessageInfo

func (m *Memo) GetReportType() Memo_ReportType {
	if m != nil {
		return m.ReportType
	}
	return Memo_SELF_REPORTED
}

func (m *Memo) GetDiseaseID() int32 {
	if m != nil {
		return m.DiseaseID
	}
	return 0
}

func (m *Memo) GetSymptomID() []int32 {
	if m != nil {
		return m.SymptomID
	}
	return nil
}

func init() {
	proto.RegisterEnum("backend.Memo_ReportType", Memo_ReportType_name, Memo_ReportType_value)
	proto.RegisterType((*Memo)(nil), "backend.Memo")
}

func init() {
	proto.RegisterFile("memo.proto", fileDescriptor_2e9a3479e3e5dd48)
}

var fileDescriptor_2e9a3479e3e5dd48 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0x4d, 0xcd, 0xcd,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0x4a, 0x4c, 0xce, 0x4e, 0xcd, 0x4b, 0x51,
	0xda, 0xc6, 0xc8, 0xc5, 0xe2, 0x9b, 0x9a, 0x9b, 0x2f, 0x64, 0xc1, 0xc5, 0x55, 0x94, 0x5a, 0x90,
	0x5f, 0x54, 0x12, 0x52, 0x59, 0x90, 0x2a, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x67, 0x24, 0xa1, 0x07,
	0x55, 0xa6, 0x07, 0x52, 0xa2, 0x17, 0x04, 0x97, 0x0f, 0x42, 0x52, 0x2b, 0x24, 0xc3, 0xc5, 0x99,
	0x92, 0x59, 0x9c, 0x9a, 0x58, 0x9c, 0xea, 0xe9, 0x22, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x1a, 0x84,
	0x10, 0x00, 0xc9, 0x16, 0x57, 0xe6, 0x16, 0x94, 0xe4, 0xe7, 0x7a, 0xba, 0x48, 0x30, 0x2b, 0x30,
	0x83, 0x64, 0xe1, 0x02, 0x4a, 0x16, 0x5c, 0x5c, 0x08, 0x53, 0x85, 0x04, 0xb9, 0x78, 0x83, 0x5d,
	0x7d, 0xdc, 0xe2, 0x83, 0x5c, 0x03, 0xfc, 0x83, 0x42, 0x5c, 0x5d, 0x04, 0x18, 0x84, 0xc4, 0xb9,
	0x84, 0x9d, 0x5d, 0x83, 0x42, 0x3c, 0xdd, 0x3c, 0x5d, 0x5d, 0xe2, 0x3d, 0xfd, 0xdc, 0x5c, 0x9d,
	0x43, 0x3c, 0xfd, 0xfd, 0x04, 0x18, 0x93, 0xd8, 0xc0, 0x1e, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0xaa, 0x4a, 0xc6, 0x21, 0xd6, 0x00, 0x00, 0x00,
}
