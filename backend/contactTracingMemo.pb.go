// Code generated by protoc-gen-go. DO NOT EDIT.
// source: findMyPKMemo.proto

package backend

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ContactTracingMemo_ReportType int32

const (
	ContactTracingMemo_SELF_REPORTED       ContactTracingMemo_ReportType = 0
	ContactTracingMemo_CERTIFIED_INFECTION ContactTracingMemo_ReportType = 1
)

var ContactTracingMemo_ReportType_name = map[int32]string{
	0: "SELF_REPORTED",
	1: "CERTIFIED_INFECTION",
}

var ContactTracingMemo_ReportType_value = map[string]int32{
	"SELF_REPORTED":       0,
	"CERTIFIED_INFECTION": 1,
}

func (x ContactTracingMemo_ReportType) String() string {
	return proto.EnumName(ContactTracingMemo_ReportType_name, int32(x))
}

func (ContactTracingMemo_ReportType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e8a751c8998b2761, []int{0, 0}
}

type ContactTracingMemo struct {
	ReportType           ContactTracingMemo_ReportType `protobuf:"varint,1,opt,name=reportType,proto3,enum=backend.ContactTracingMemo_ReportType" json:"reportType,omitempty"`
	DiseaseID            int32                         `protobuf:"varint,2,opt,name=diseaseID,proto3" json:"diseaseID,omitempty"`
	SymptomID            []int32                       `protobuf:"varint,3,rep,packed,name=symptomID,proto3" json:"symptomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ContactTracingMemo) Reset()         { *m = ContactTracingMemo{} }
func (m *ContactTracingMemo) String() string { return proto.CompactTextString(m) }
func (*ContactTracingMemo) ProtoMessage()    {}
func (*ContactTracingMemo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a751c8998b2761, []int{0}
}

func (m *ContactTracingMemo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactTracingMemo.Unmarshal(m, b)
}
func (m *ContactTracingMemo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactTracingMemo.Marshal(b, m, deterministic)
}
func (m *ContactTracingMemo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactTracingMemo.Merge(m, src)
}
func (m *ContactTracingMemo) XXX_Size() int {
	return xxx_messageInfo_ContactTracingMemo.Size(m)
}
func (m *ContactTracingMemo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactTracingMemo.DiscardUnknown(m)
}

var xxx_messageInfo_ContactTracingMemo proto.InternalMessageInfo

func (m *ContactTracingMemo) GetReportType() ContactTracingMemo_ReportType {
	if m != nil {
		return m.ReportType
	}
	return ContactTracingMemo_SELF_REPORTED
}

func (m *ContactTracingMemo) GetDiseaseID() int32 {
	if m != nil {
		return m.DiseaseID
	}
	return 0
}

func (m *ContactTracingMemo) GetSymptomID() []int32 {
	if m != nil {
		return m.SymptomID
	}
	return nil
}

func init() {
	proto.RegisterEnum("backend.ContactTracingMemo_ReportType", ContactTracingMemo_ReportType_name, ContactTracingMemo_ReportType_value)
	proto.RegisterType((*ContactTracingMemo)(nil), "backend.ContactTracingMemo")
}

func init() {
	proto.RegisterFile("findMyPKMemo.proto", fileDescriptor_e8a751c8998b2761)
}

var fileDescriptor_e8a751c8998b2761 = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xcb, 0xcc, 0x4b,
	0xf1, 0xad, 0x0c, 0xf0, 0xf6, 0x4d, 0xcd, 0xcd, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x4f, 0x4a, 0x4c, 0xce, 0x4e, 0xcd, 0x4b, 0x51, 0x3a, 0xc6, 0xc8, 0xc5, 0xe3, 0x86, 0x24, 0x2f,
	0xe4, 0xc0, 0xc5, 0x55, 0x94, 0x5a, 0x90, 0x5f, 0x54, 0x12, 0x52, 0x59, 0x90, 0x2a, 0xc1, 0xa8,
	0xc0, 0xa8, 0xc1, 0x67, 0xa4, 0xa0, 0x07, 0x55, 0xae, 0x87, 0xac, 0x54, 0x2f, 0x08, 0xae, 0x2e,
	0x08, 0x49, 0x8f, 0x90, 0x0c, 0x17, 0x67, 0x4a, 0x66, 0x71, 0x6a, 0x62, 0x71, 0xaa, 0xa7, 0x8b,
	0x04, 0x93, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x42, 0x00, 0x24, 0x5b, 0x5c, 0x99, 0x5b, 0x50, 0x92,
	0x9f, 0xeb, 0xe9, 0x22, 0xc1, 0xac, 0xc0, 0x0c, 0x92, 0x85, 0x0b, 0x28, 0x59, 0x70, 0x71, 0x21,
	0x4c, 0x15, 0x12, 0xe4, 0xe2, 0x0d, 0x76, 0xf5, 0x71, 0x8b, 0x0f, 0x72, 0x0d, 0xf0, 0x0f, 0x0a,
	0x71, 0x75, 0x11, 0x60, 0x10, 0x12, 0xe7, 0x12, 0x76, 0x76, 0x0d, 0x0a, 0xf1, 0x74, 0xf3, 0x74,
	0x75, 0x89, 0xf7, 0xf4, 0x73, 0x73, 0x75, 0x0e, 0xf1, 0xf4, 0xf7, 0x13, 0x60, 0x4c, 0x62, 0x03,
	0x7b, 0xcc, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x19, 0x5f, 0x7c, 0x93, 0xee, 0x00, 0x00, 0x00,
}
